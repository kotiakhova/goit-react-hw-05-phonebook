{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","components/ContactForm/index.jsx","components/Filter/index.jsx","components/ContactListItem/index.jsx","components/ContactList/index.jsx","components/App.jsx","index.jsx","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","isCorrect","isFull","handleChange","e","target","setState","value","handleSubmit","evt","preventDefault","nameChecking","setTimeout","props","onAddContact","check","this","contacts","forEach","stateContact","toLowerCase","className","style","container","onSubmit","type","placeholder","onChange","CSSTransition","in","appear","classNames","timeout","unmountOnExit","errorModal","Component","Filter","onHandleFilter","ContactListItem","itemName","itemNumber","onRemoveItem","smallContainer","onClick","removeBtn","ContactList","visibleContacts","onRemove","TransitionGroup","component","map","id","key","App","filter","addContact","contact","uuidv4","prevState","getVisibleContacts","includes","handleFilter","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","styles","logo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2e25f30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1INJV\",\"errorModal\":\"ContactForm_errorModal__MTR8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\",\"logo\":\"App_logo__3qVxm\"};","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport style from \"./ContactForm.module.css\";\nimport \"./ContactForm.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    isCorrect: false,\n    isFull: false,\n  };\n  handleChange = (e) => {\n    const { name } = e.target;\n    this.setState({ [name]: e.target.value });\n  };\n\n  nameChecking() {\n    let check = false;\n    this.props.contacts.forEach((stateContact) => {\n      if (stateContact.name.toLowerCase() === this.state.name.toLowerCase()) {\n        check = this.state.name;\n      }\n    });\n    return check;\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (this.nameChecking()) {\n      this.setState({ isCorrect: true });\n      setTimeout(() => {\n        this.setState({ isCorrect: false });\n      }, 4000);\n    } else {\n      if (this.state.name && this.state.number) {\n        this.setState({ name: \"\", number: \"\", isCorrect: false });\n        this.props.onAddContact(this.state.name, this.state.number);\n      } else {\n        this.setState({ isFull: true });\n        setTimeout(() => {\n          this.setState({ isFull: false });\n        }, 4000);\n      }\n    }\n  };\n  render() {\n    const { number, name, isCorrect, isFull } = this.state;\n    return (\n      <>\n        <div className={style.container}>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <p>Name</p>\n              <input\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Enter name\"\n                onChange={this.handleChange}\n                value={name}\n              />\n            </label>\n            <label>\n              <p>Number</p>\n              <input\n                name=\"number\"\n                type=\"text\"\n                placeholder=\"Enter number\"\n                onChange={this.handleChange}\n                value={number}\n              />\n            </label>\n            <button type=\"submit\">Add contact </button>\n          </form>\n          {/* {isCorrect && (\n            <CSSTransition\n              in={true}\n              appear={true}\n              classNames=\"errorModal\"\n              timeout={250}\n              unmountOnExit\n            >\n              <div\n                className={style.errorModal}\n              >{`${this.nameChecking()} is already in contact`}</div>\n            </CSSTransition>\n          )} */}\n          {/* {isFull && (\n            <CSSTransition\n              in={true}\n              appear={true}\n              classNames=\"errorModal\"\n              timeout={250}\n              unmountOnExit\n            >\n              <div className={style.errorModal}>{`Write name and number`}</div>\n            </CSSTransition>\n          )} */}\n          <CSSTransition\n            in={isCorrect ? true : false}\n            appear={true}\n            classNames=\"errorModal\"\n            timeout={250}\n            unmountOnExit\n          >\n            <div\n              className={style.errorModal}\n            >{`${this.nameChecking()} is already in contact`}</div>\n          </CSSTransition>\n          <CSSTransition\n            in={isFull ? true : false}\n            appear={true}\n            classNames=\"errorModal\"\n            timeout={250}\n            unmountOnExit\n          >\n            <div className={style.errorModal}>{`Write name and number`}</div>\n          </CSSTransition>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Filter({ onHandleFilter }) {\n  return (\n    <>\n      <div>\n        <p>Find contacts by name</p>\n        <input name=\"filter\" type=\"text\" onChange={(e) => onHandleFilter(e)} />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport style from \"./ContactListItem.module.css\";\n\nexport default function ContactListItem({\n  itemName,\n  itemNumber,\n  onRemoveItem,\n}) {\n  return (\n    <>\n      <li className={style.container}>\n        <p className={style.name}>{itemName}</p>\n        <div className={style.smallContainer}>\n          <p className={style.number}>{itemNumber}</p>\n          <button\n            type=\"button\"\n            onClick={onRemoveItem}\n            className={style.removeBtn}\n          ></button>\n        </div>\n      </li>\n    </>\n  );\n}\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactListItem from \"../ContactListItem\";\nimport \"./ContactList.css\";\n\nexport default function ContactList({ visibleContacts, onRemove }) {\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className=\"ContactList\">\n        {visibleContacts.map(({ name, id, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"contactListItem\">\n            <ContactListItem\n              itemName={name}\n              itemNumber={number}\n              onRemoveItem={() => onRemove(id)}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n      {/* <ul className=\"ContactList\">\n        {visibleContacts.map(({ name, id, number }) => (\n          <CSSTransition\n            in={true}\n            appear={true}\n            key={id}\n            timeout={250}\n            classNames=\"contactListItem\"\n            unmountOnExit\n          >\n            <ContactListItem\n              itemName={name}\n              // itemNumber={number}\n              onRemoveItem={() => onRemove(id)}\n            />\n          </CSSTransition>\n        ))}\n      </ul> */}\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\nimport styles from \"./App.module.css\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    persistedContacts &&\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState((prevState) => {\n      return {\n        contacts: [contact, ...prevState.contacts],\n      };\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  handleFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { contacts } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"logo\"\n          timeout={500}\n          unmountOnExit\n        >\n          <h1 className={styles.logo}>Phonebook</h1>\n        </CSSTransition>\n        <ContactForm\n          onAddContact={this.addContact}\n          contacts={this.state.contacts}\n        />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && (\n          <CSSTransition\n            in={contacts.length > 1 ? true : false}\n            appear={false}\n            classNames=\"filter\"\n            timeout={500}\n            unmountOnExit\n          >\n            <Filter onHandleFilter={this.handleFilter} />\n          </CSSTransition>\n        )}\n        {/* <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"contacts\"\n          timeout={250}\n          unmountOnExit\n        > */}\n        <ContactList\n          visibleContacts={visibleContacts}\n          onRemove={this.removeContact}\n        />\n        {/* </CSSTransition> */}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__2jeJP\",\"removeBtn\":\"ContactListItem_removeBtn__hDzns\",\"smallContainer\":\"ContactListItem_smallContainer__1CbM9\"};"],"sourceRoot":""}